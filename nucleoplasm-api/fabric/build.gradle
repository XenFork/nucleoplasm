plugins {
    id "com.github.johnrengelman.shadow" version "$shadow_version"
}

architectury {
    platformSetupLoomIde()
    fabric()
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:$fabric_loader_version"
    modApi "net.fabricmc.fabric-api:fabric-api:$fabric_api_version"
    // Remove the next line if you don't want to depend on the API
    modApi "dev.architectury:architectury-fabric:$architectury_version"
    modImplementation(include("com.github.artbits:quickio:$quickio_version") {
        transitive false
    })
    modImplementation(include("org.iq80.leveldb:leveldb:$leveldb_version"))
    modImplementation(include("org.iq80.leveldb:leveldb-api:$leveldb_version"))
    modImplementation(include("io.protostuff:protostuff-core:$protostuff_version"))
    modImplementation(include("io.protostuff:protostuff-api:$protostuff_version"))
    modImplementation(include("io.protostuff:protostuff-runtime:$protostuff_version"))
    modImplementation(include("io.protostuff:protostuff-collectionschema:$protostuff_version"))

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionFabric")) { transitive false }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowCommon]
    classifier "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier null
}

jar {
    classifier "dev"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenFabric(MavenPublication) {
            artifactId = archives_base_name + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}